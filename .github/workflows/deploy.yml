name: Deploy JOBIFY

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy backend via SSM (with git safe.directory)
      run: |
        set -e

        echo "üöÄ Sending SSM command to update backend..."
        COMMAND_ID=$(aws ssm send-command \
          --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
          --document-name "AWS-RunShellScript" \
          --comment "GitHub Actions deploy JOBIFY" \
          --parameters '{
            "commands": [
              "set -e",
              "git config --global --add safe.directory /home/ec2-user/JOBIFY",
              "echo üîç HOME directory of root:",
              "ls -al /",
              "echo üîç Check ec2-user home:",
              "ls -al /home/ec2-user",
              "cd /home/ec2-user/JOBIFY",
              "echo üöÄ REMOTE:",
              "git remote -v",
              "echo üöÄ BRANCH:",
              "git branch -vv",
              "echo üöÄ FETCH & CHECKOUT MAIN:",
              "git fetch origin",
              "git checkout main",
              "git reset --hard origin/main",
              "echo üöÄ LAST COMMIT:",
              "git log -1 --oneline",
              "echo üöÄ NPM INSTALL:",
              "npm install",
              "echo üöÄ PM2 STATUS BEFORE:",
              "pm2 list",
              "pm2 restart all",
              "pm2 save",
              "echo üöÄ PM2 STATUS AFTER:",
              "pm2 list"
            ]
          }' \
          --query "Command.CommandId" \
          --output text)

        echo "‚úÖ SSM Command ID: $COMMAND_ID"
        echo "‚è≥ Waiting for SSM to finish..."

        if ! aws ssm wait command-executed \
              --command-id "$COMMAND_ID" \
              --instance-id "${{ secrets.EC2_INSTANCE_ID }}"; then
          echo "üî• SSM command failed, fetching logs..."
          aws ssm get-command-invocation \
            --command-id "$COMMAND_ID" \
            --instance-id "${{ secrets.EC2_INSTANCE_ID }}" \
            --query '{Status:Status, StdOut:StandardOutputContent, StdErr:StandardErrorContent}' \
            --output text
          exit 1
        fi

        echo "‚úÖ SSM completed. Logs:"
        aws ssm get-command-invocation \
          --command-id "$COMMAND_ID" \
          --instance-id "${{ secrets.EC2_INSTANCE_ID }}" \
          --query '{Status:Status, StdOut:StandardOutputContent, StdErr:StandardErrorContent}' \
          --output text

    - name: Build frontend
      run: |
        cd client
        npm install
        npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}

    - name: Upload frontend to S3
      run: |
        aws s3 sync client/dist/ s3://jobify-frontend-bucket --delete